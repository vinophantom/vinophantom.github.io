<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Quantum</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://vinophantom.github.io/"/>
  <updated>2020-03-06T18:03:53.455Z</updated>
  <id>https://vinophantom.github.io/</id>
  
  <author>
    <name>许伟杰</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>编写卓越的代码——防御性编程</title>
    <link href="https://vinophantom.github.io/2020/03/07/%E7%BC%96%E5%86%99%E5%8D%93%E8%B6%8A%E7%9A%84%E4%BB%A3%E7%A0%81%E2%80%94%E2%80%94%E9%98%B2%E5%BE%A1%E6%80%A7%E7%BC%96%E7%A8%8B/"/>
    <id>https://vinophantom.github.io/2020/03/07/%E7%BC%96%E5%86%99%E5%8D%93%E8%B6%8A%E7%9A%84%E4%BB%A3%E7%A0%81%E2%80%94%E2%80%94%E9%98%B2%E5%BE%A1%E6%80%A7%E7%BC%96%E7%A8%8B/</id>
    <published>2020-03-06T16:24:37.000Z</published>
    <updated>2020-03-06T18:03:53.455Z</updated>
    
    <content type="html"><![CDATA[<h1 id="编写卓越的代码"><a href="#编写卓越的代码" class="headerlink" title="编写卓越的代码"></a>编写卓越的代码</h1><blockquote><p>软件<strong>工程师</strong>的智慧，就在于他们是否开始意识到：使程序能用和使程序正确，这两者之间有什么样的差别。</p><footer><strong>M.A.Jackson</strong><cite>《程序设计原理》</cite></footer></blockquote><ul><li><strong>可用的代码</strong>：提供常规输入集，代码给出常规输出；一旦有意外输入，代码崩溃。</li><li><strong>正确的代码</strong>：对于所有输入集，有正确的输出；</li><li><strong>优秀的代码</strong>：一定是正确的代码；逻辑容易理解；代码自然；容易维护。</li></ul><a id="more"></a><h1 id="防御性编程"><a href="#防御性编程" class="headerlink" title="防御性编程"></a>防御性编程</h1><p>防御性编程是一种细致、谨慎的编程方法。为了开发可靠的软件，我们要设计系统中的每个组件，以使其尽可能地“保护”自己。我们通过明确地在代码中对设想进行检查，击碎了未记录下来的设想。这是一种努力，防止（或至少是观察）我们的代码以将会展现错误行为的方式被调用。</p><h1 id="Java-中的实践"><a href="#Java-中的实践" class="headerlink" title="Java 中的实践"></a>Java 中的实践</h1><figure class="highlight java"><figcaption><span>Integer.parseInt()</span><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html">Integer</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">parseInt</span><span class="params">(String s, <span class="keyword">int</span> radix)</span> <span class="keyword">throws</span> NumberFormatException</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (s == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NumberFormatException(<span class="string">"null"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (radix &lt; Character.MIN_RADIX) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NumberFormatException(<span class="string">"radix "</span> + radix +</span><br><span class="line">                                            <span class="string">" less than Character.MIN_RADIX"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (radix &gt; Character.MAX_RADIX) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NumberFormatException(<span class="string">"radix "</span> + radix +</span><br><span class="line">                                            <span class="string">" greater than Character.MAX_RADIX"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      <span class="comment">// 主逻辑</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;编写卓越的代码&quot;&gt;&lt;a href=&quot;#编写卓越的代码&quot; class=&quot;headerlink&quot; title=&quot;编写卓越的代码&quot;&gt;&lt;/a&gt;编写卓越的代码&lt;/h1&gt;&lt;blockquote&gt;&lt;p&gt;软件&lt;strong&gt;工程师&lt;/strong&gt;的智慧，就在于他们是否开始意识到：使程序能用和使程序正确，这两者之间有什么样的差别。&lt;/p&gt;
&lt;footer&gt;&lt;strong&gt;M.A.Jackson&lt;/strong&gt;&lt;cite&gt;《程序设计原理》&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;可用的代码&lt;/strong&gt;：提供常规输入集，代码给出常规输出；一旦有意外输入，代码崩溃。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;正确的代码&lt;/strong&gt;：对于所有输入集，有正确的输出；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;优秀的代码&lt;/strong&gt;：一定是正确的代码；逻辑容易理解；代码自然；容易维护。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Coding" scheme="https://vinophantom.github.io/categories/Coding/"/>
    
      <category term="Defensive Programming" scheme="https://vinophantom.github.io/categories/Coding/Defensive-Programming/"/>
    
    
      <category term="Coding" scheme="https://vinophantom.github.io/tags/Coding/"/>
    
      <category term="Defensive Programming" scheme="https://vinophantom.github.io/tags/Defensive-Programming/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://vinophantom.github.io/2019/12/28/hello-world/"/>
    <id>https://vinophantom.github.io/2019/12/28/hello-world/</id>
    <published>2019-12-28T02:34:08.480Z</published>
    <updated>2020-01-08T08:44:31.196Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hypers.task;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.hypers.S3.S3Config;</span><br><span class="line"><span class="keyword">import</span> com.hypers.S3.aws.AwsS3Upload;</span><br><span class="line"><span class="keyword">import</span> com.hypers.entity.Account;</span><br><span class="line"><span class="keyword">import</span> com.hypers.entity.Campaign;</span><br><span class="line"><span class="keyword">import</span> com.hypers.entity.ManualMessage;</span><br><span class="line"><span class="keyword">import</span> com.hypers.service.CampaignService;</span><br><span class="line"><span class="keyword">import</span> com.hypers.util.common.FileUtil;</span><br><span class="line"><span class="keyword">import</span> com.hypers.util.hfa.ZipUtils;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Calendar;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.Scheduled;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 活动定时上传s3，</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CampaignTask</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Autowired</span></span><br><span class="line">  AwsS3Upload upload;</span><br><span class="line">  <span class="meta">@Autowired</span></span><br><span class="line">  S3Config s3Config;</span><br><span class="line">  <span class="meta">@Autowired</span></span><br><span class="line">  <span class="keyword">private</span> CampaignService campaignService;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String name = <span class="string">"FREQUENCY"</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SUB_JSON = <span class="string">".json"</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SUB_ZIP = <span class="string">".zip"</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TEMP = <span class="string">"/temp/"</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 每天凌晨执行，统计已过去一天需计算的内容</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@Scheduled</span>(cron = <span class="string">"10 0 0 * * ? "</span>)</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 统计上传所需计算的当天截止时间的所有活动（出现过的活动,无视停启用状态）</span></span><br><span class="line"><span class="comment">     * TA 筛选的问题需要加</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      Calendar calendar = Calendar.getInstance(); <span class="comment">// calendar.set(2019, 11, 26);</span></span><br><span class="line">      Date date = calendar.getTime();<span class="comment">//DateUtils.addDays(, );//DateUtils.addMonths( -1);</span></span><br><span class="line"></span><br><span class="line">      uploadFrequencyFile(date, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 频次计算清单文件上传</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">uploadFrequencyFile</span><span class="params">(Date date, List&lt;Long&gt; accountIds, List&lt;Long&gt; orderIds)</span></span></span><br><span class="line"><span class="function">      <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    String localPath = s3Config.getTempPath() + TEMP;</span><br><span class="line">    List&lt;Campaign&gt; campaignByDate = campaignService</span><br><span class="line">        .calCampaign(campaignService.getCampaignByDate(date, accountIds, orderIds));</span><br><span class="line">    String content = JSON.toJSONString(campaignByDate);</span><br><span class="line"></span><br><span class="line">    FileUtil.writeFile(localPath, name + SUB_JSON, content);</span><br><span class="line">    File file = <span class="keyword">new</span> File(localPath + name + SUB_JSON);</span><br><span class="line">    ZipUtils.zipFile(file, <span class="string">""</span>);</span><br><span class="line">    file = <span class="keyword">new</span> File(localPath + name + SUB_ZIP);</span><br><span class="line"><span class="comment">//    upload.uploadFile(s3Config.getBucket(), s3Config.getFrequencyPath(), file);</span></span><br><span class="line">    upload.uploadFileWithPublicReadAccess(s3Config.getBucket(), s3Config.getFrequencyPath(),</span><br><span class="line">        file.getName(), <span class="keyword">new</span> FileInputStream(file), <span class="number">0</span>);</span><br><span class="line">    FileUtil.delete(localPath, name);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 人工操作：指定日期范围</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(ManualMessage message)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (message.getType()) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">"operate"</span>: <span class="comment">// 运营报告</span></span><br><span class="line">        <span class="comment">//计算运营计算清单，发送计算端，目前不支持</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">"frequency"</span>: <span class="comment">// 频次报告重算（测试操作）</span></span><br><span class="line">        <span class="comment">//计算重算清单，发送计算端</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 1.仅指定天重算对应天数据，范围型不支持 (不支持)</span></span><br><span class="line"><span class="comment">         * 2.指定活动，重算该活动及其下所有订单 （没有时间范围默认全范围，可指定范围）</span></span><br><span class="line"><span class="comment">         * 3.指定订单，只算对应活动的指定订单（没有时间范围默认全范围，可指定范围）</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        List&lt;Long&gt; accountIds = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        List&lt;Long&gt; lineOrderIds = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        List&lt;Account&gt; account = message.getAccount();</span><br><span class="line">        account.forEach(a -&gt; &#123;</span><br><span class="line">          <span class="keyword">if</span> (a.getLineOrders() != <span class="keyword">null</span> &amp;&amp; a.getLineOrders().size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            lineOrderIds.addAll(a.getLineOrders());</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            accountIds.add(a.getId());</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        Calendar calendar = Calendar.getInstance(); <span class="comment">// calendar.set(2019, 11, 26);</span></span><br><span class="line">        Date date = calendar.getTime();<span class="comment">//DateUtils.addDays(, -1);//DateUtils.addMonths( -1);</span></span><br><span class="line">        uploadFrequencyFile(date, accountIds, lineOrderIds);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="comment">// 发送报警邮件</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
